{"version":3,"sources":["components/actions.ts","components/reducers.ts","components/shared/Form.tsx","components/signup/SignUpPage.tsx","components/signup/SignUpPageContainer.tsx","components/confirmation/ConfirmationPage.tsx","components/confirmation/ConfirmationPageContainer.tsx","App.tsx","index.tsx"],"names":["actionTypes","actions","firstName","email","_password","type","user","reducers","combineReducers","state","action","Form","className","this","props","headline1","headline2","text","children","PrimaryButton","buttonLabel","disabled","onClick","React","SignUpPage","_createUser","createUser","password","history","push","Paths","confirmation","_isFormComplete","TextField","required","borderless","label","value","onChange","_ev","setState","SignUpPageContainer","connect","dispatch","_props","callback","ConfirmationPage","to","signup","ConfirmationPageContainer","App","store","createStore","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ef4e94.chunk.js","sourcesContent":["import { User } from \"./types\";\r\n\r\nexport const actionTypes = {\r\n    CreateUser: 'CreateUser',\r\n};\r\n\r\nexport interface CreateUserAction {\r\n    type: string;\r\n    user: User;\r\n}\r\n\r\nexport const actions = {\r\n    createUser(firstName: string, email: string, _password: string): CreateUserAction {\r\n        return {\r\n            type: actionTypes.CreateUser,\r\n            user: {\r\n                firstName,\r\n                email,\r\n            },\r\n        };\r\n    },\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { actionTypes, CreateUserAction } from \"./actions\";\r\nimport { User } from \"./types\";\r\n\r\nfunction user(state = null, action: CreateUserAction): User | null {\r\n    if (action.type === actionTypes.CreateUser) {\r\n        return action.user;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport interface StoreState {\r\n    user: User;\r\n}\r\n\r\nexport const reducers = combineReducers({\r\n    user,\r\n});\r\n","import { PrimaryButton } from 'office-ui-fabric-react';\r\nimport * as React from 'react';\r\n\r\nimport './Form.scss';\r\n\r\ninterface Props {\r\n    headline1: string;\r\n    headline2: string;\r\n    text: string;\r\n    buttonLabel: string;\r\n    disabled?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport class Form extends React.Component<Props> {\r\n    render() {\r\n        return (\r\n            <div className='form'>\r\n                <div className='header'>\r\n                    <div>{this.props.headline1}</div>\r\n                    <div className='bold'>{this.props.headline2}</div>\r\n                </div>\r\n\r\n                <div className='text'>{this.props.text}</div>\r\n\r\n                <div className='body'>\r\n                    {this.props.children}\r\n                </div>\r\n\r\n                <PrimaryButton\r\n                    text={this.props.buttonLabel}\r\n                    disabled={this.props.disabled}\r\n                    onClick={this.props.onClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import { TextField } from 'office-ui-fabric-react';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Paths } from '../../App';\r\nimport { Form } from '../shared/Form';\r\n\r\nimport './SignUpPage.scss';\r\n\r\nexport interface DispatchProps {\r\n    createUser(firstName: string, email: string, password: string, callback?: () => void): void;\r\n}\r\n\r\ninterface State {\r\n    firstName: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport class SignUpPage extends React.Component<DispatchProps & RouteComponentProps, State> {\r\n    constructor(props: DispatchProps & RouteComponentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            email: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    private _createUser = (): void => {\r\n        this.props.createUser(\r\n            this.state.firstName,\r\n            this.state.email,\r\n            this.state.password,\r\n            () => {\r\n                this.props.history.push(Paths.confirmation);\r\n            }\r\n        );\r\n    }\r\n\r\n    private _isFormComplete(): boolean {\r\n        return !!(this.state.firstName &&\r\n            this.state.email &&\r\n            this.state.password);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='SignUpPage'>\r\n                <Form\r\n                    headline1=\"Let's\"\r\n                    headline2='Sign Up'\r\n                    text=\"Use the form below to sign up for this super  awesome service. You're only a few steps away!\"\r\n                    buttonLabel='Sign Up'\r\n                    disabled={!this._isFormComplete()}\r\n                    onClick={this._createUser}\r\n                >\r\n                    <TextField\r\n                        required\r\n                        borderless\r\n                        label='First Name'\r\n                        value={this.state.firstName}\r\n                        onChange={(_ev, firstName = '') => this.setState({firstName})}\r\n                    />\r\n\r\n                    <TextField\r\n                        required\r\n                        borderless\r\n                        label='Email Address'\r\n                        value={this.state.email}\r\n                        onChange={(_ev, email = '') => this.setState({email})}\r\n                    />\r\n\r\n                    <TextField\r\n                        required\r\n                        borderless\r\n                        type='password'\r\n                        label='Password'\r\n                        value={this.state.password}\r\n                        onChange={(_ev, password = '') => this.setState({password})}\r\n                    />\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport { Dispatch } from \"redux\";\r\nimport { actions } from \"../actions\";\r\nimport { DispatchProps, SignUpPage } from \"./SignUpPage\";\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch, _props: any): DispatchProps {\r\n    return {\r\n        createUser: (firstName: string, email: string, password: string, callback?: () => void) => {\r\n            dispatch(actions.createUser(firstName, email, password));\r\n            callback && callback();\r\n        },\r\n    };\r\n}\r\n\r\nexport const SignUpPageContainer = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SignUpPage);\r\n","import * as React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Paths } from '../../App';\r\nimport { Form } from '../shared/Form';\r\nimport { User } from '../types';\r\n\r\nimport './ConfirmationPage.scss';\r\n\r\nexport interface StateProps {\r\n    user: User;\r\n}\r\n\r\nexport class ConfirmationPage extends React.Component<StateProps> {\r\n    render() {\r\n        const { user } = this.props;\r\n\r\n        if (!user) {\r\n            return <Redirect to={Paths.signup} />\r\n        }\r\n        \r\n        return (\r\n            <div className='ConfirmationPage'>\r\n                <Form\r\n                    headline1='Welcome,'\r\n                    headline2={`${user.firstName}!`}\r\n                    text='You have been registered for this awesome service. Please check your email listed below for instructions.'\r\n                    buttonLabel='Sign In'\r\n                >\r\n                    <div className='email'>\r\n                        {user.email}\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { ConfirmationPage, StateProps } from \"./ConfirmationPage\";\r\nimport { StoreState } from \"../reducers\";\r\n\r\nfunction mapStateToProps(state: StoreState, _props: any): StateProps {\r\n    return {\r\n        user: state.user,\r\n    };\r\n}\r\n\r\nexport const ConfirmationPageContainer = connect(\r\n    mapStateToProps\r\n)(ConfirmationPage);\r\n","import * as React from 'react'\nimport { Provider } from 'react-redux';\nimport { Redirect, Route, RouteProps, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { reducers } from './components/reducers';\n\nimport { SignUpPageContainer } from './components/signup/SignUpPageContainer';\nimport { ConfirmationPageContainer } from './components/confirmation/ConfirmationPageContainer';\n\nimport './App.scss';\n\nexport const Paths = {\n    signup: '/signup/signup',\n    confirmation: '/signup/confirmation',\n};\n\nexport class App extends React.Component<RouteProps> {\n    render() {\n        return (\n            <div className='App'>\n                <BrowserRouter>\n                    <Provider store={createStore(reducers)}>\n                        <Switch>\n                            <Route exact path='/'>\n                                <Redirect to={Paths.signup} />\n                            </Route>\n                            <Route path={Paths.signup} component={SignUpPageContainer} />\n                            <Route path={Paths.confirmation} component={ConfirmationPageContainer} />\n                        </Switch>\n                    </Provider>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}